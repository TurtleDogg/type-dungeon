#include <iostream>
#include <string>
#include <time.h>
#include <stdlib.h> 
#include <thread>
#include <chrono>
#include <algorithm>
#include <cstdlib>

void levelOne(){
    std::string answer;
    int timeToFinish;
    std::cout << "This is level 1." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(3));
    std::cout << "You enter the dungeon. The first room is dark and dreary, you see vague sillhouettes on the roof - a bat flies at you." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(5));
    std::cout << "Type 'SLICE' to swing at it with your sword." << std::endl;
    std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();
    std::cin >> answer;
    std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();
    timeToFinish = std::chrono::duration_cast<std::chrono::seconds>(end - start).count();
    std::transform(answer.begin(), answer.end(), answer.begin(), ::tolower);
    if (answer == "slice" and timeToFinish <= 3){
        std::cout << "Level 1 completed. You typed it in " << timeToFinish << " seconds! That's fast. The bat disappears into dust before the sword makes contact." << std::endl;
    }
    else if (answer != "slice"){
        std::cout << "You typed it incorrectly. The bat bites you and infects you with a venomous disease, you die soon after." <<std::endl;
        quick_exit(EXIT_SUCCESS);
    }
    else if (timeToFinish > 3){
        std::cout << "Level 1 failed. You typed it in " << timeToFinish << " seconds. Not fast enough.The bat bites you and infects you with a venomous disease, you die soon after." << std::endl;
        quick_exit(EXIT_SUCCESS);
    }
    
}
void levelTwo(){
    std::string answer;
    int timeToFinish;
    std::cout << "This is level 2." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(3));
    std::cout << "You walk further into the cave and see a large rusted door. As you walk towards it, you step on a pressure plate and realise it was a trap." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(5));
    std::cout << "Type 'DODGE_FAST' to dodge the arrow trap." << std::endl;
    std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();
    std::cin >> answer;
    std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();
    timeToFinish = std::chrono::duration_cast<std::chrono::seconds>(end - start).count();
    std::transform(answer.begin(), answer.end(), answer.begin(), ::tolower);
    if (answer == "dodge_fast" and timeToFinish <= 3){
        std::cout << "Level 2 completed. You typed it in " << timeToFinish << " seconds! That's fast. You quickly roll out of the way of the trap." << std::endl;
    }
    else if (answer != "dodge_fast"){
        std::cout << "You typed it incorrectly.The arrows pierce through your body and you die instantly." <<std::endl;
        quick_exit(EXIT_SUCCESS);
    }
    else if (timeToFinish > 3){
        std::cout << "Level 2 failed. You typed it in " << timeToFinish << " seconds. Not fast enough. The arrows pierce through your body and you die instantly." << std::endl;
        quick_exit(EXIT_SUCCESS);
    }
    
}

void levelThreePartA(){
    std::string answer;
    int timeToFinish;
    std::cout << "This is level 3." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(3));
    std::cout << "You continue on, you get to the large door - before you open two skeleton warriors burst through it. " << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(5));
    std::cout << "The first skeleton warrior swings his might axe. Type 'PARRY' to parry the blow." << std::endl;
    std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();
    std::cin >> answer;
    std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();
    timeToFinish = std::chrono::duration_cast<std::chrono::seconds>(end - start).count();
    std::transform(answer.begin(), answer.end(), answer.begin(), ::tolower);
    if (answer == "parry" and timeToFinish <= 3){
        std::cout << "You typed it in " << timeToFinish << " seconds! That's fast. You block the axe and slice his bony head clean off." << std::endl;
    }
    else if (answer != "parry"){
        std::cout << "You typed it incorrectly. The axe severs your body head to toe." <<std::endl;
        quick_exit(EXIT_SUCCESS);
    }
    else if (timeToFinish > 3){
        std::cout << "You typed it in " << timeToFinish << " seconds. Not fast enough. The axe severs your body head to toe." << std::endl;
        quick_exit(EXIT_SUCCESS);
    }
}

void levelThreePartB(){
    std::string answer;
    int timeToFinish;
    std::this_thread::sleep_for(std::chrono::seconds(3));
    std::cout << "The second skeleton warrior is caught by surprise and falls on the skull of his comrade, he swings at your feet.\nType 'JUMP' to parry the blow." << std::endl;
    std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();
    std::cin >> answer;
    std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();
    timeToFinish = std::chrono::duration_cast<std::chrono::seconds>(end - start).count();
    std::transform(answer.begin(), answer.end(), answer.begin(), ::tolower);
    if (answer == "jump" and timeToFinish <= 3){
        std::cout << "Level 3 completed. You typed it in " << timeToFinish << " seconds! That's fast. You jump to evade the blade and slice your sword into his bony ribcage." << std::endl;
    }
    else if (answer != "jump"){
        std::cout << "You typed it incorrectly. The skeleton slices your foot off and quickly cuts off your head." <<std::endl;
        quick_exit(EXIT_SUCCESS);
    }
    else if (timeToFinish > 3){
        std::cout << "Level 3 failed. You typed it in " << timeToFinish << " seconds. Not fast enough. The skeleton slices your foot off and quickly cuts off your head." << std::endl;
        quick_exit(EXIT_SUCCESS);
    }
}
void levelFour(){
    std::string answer;
    int timeToFinish;
    std::cout << "This is level 4." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(3));
    std::cout << "The Skeletons seem to turn the dust similar to the bats. You continue through the door into a small room. The door closes behind you, the room starts to fill with water. There is a trapdoor at the top where the water is entering." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(5));
    std::cout << "Type SWIM_FAST to get to the trap door before it closes." << std::endl;
    std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();
    std::cin >> answer;
    std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();
    timeToFinish = std::chrono::duration_cast<std::chrono::seconds>(end - start).count();
    std::transform(answer.begin(), answer.end(), answer.begin(), ::tolower);
    if (answer == "swim_fast" and timeToFinish <= 3){
        std::cout << "Level 4 completed. You typed it in " << timeToFinish << " seconds! That's fast. You swim swiftly up to the top of the chamber and go through the trap door to a dry room." << std::endl;
    }
    else if (answer != "dodge_fast"){
        std::cout << "You typed it incorrectly. You drown before you can prise the trap door open." <<std::endl;
        quick_exit(EXIT_SUCCESS);
    }
    else if (timeToFinish > 3){
        std::cout << "Level 4 failed. You typed it in " << timeToFinish << " seconds. Not fast enough. You drown before you can prise the trap door open." << std::endl;
        quick_exit(EXIT_SUCCESS);
    }
    
}
void levelFivePartA(){
    std::string answer;
    int timeToFinish;
    std::cout << "This is level 5." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(3));
    std::cout << "In the room you see the treasure chest you have been looking for all this time. You feel tense and walk towards the chest. The Necromancer behind all these traps and enemies appears out of nowhere." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(5));
    std::cout << "He lifts up his mighty staff, and shoots a dark orb of darkness at you. Type 'DEFLECT_QUICK' deflect the orb." << std::endl;
    std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();
    std::cin >> answer;
    std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();
    timeToFinish = std::chrono::duration_cast<std::chrono::seconds>(end - start).count();
    std::transform(answer.begin(), answer.end(), answer.begin(), ::tolower);
    if (answer == "deflect_quick" and timeToFinish <= 3){
        std::cout << "You typed it in " << timeToFinish << " seconds! That's fast. You deflect the orb off your sword, it hits the necromancer full in the face." << std::endl;
    }
    else if (answer != "deflect_quick"){
        std::cout << "You typed it incorrectly. The projectile engulfs your body and you are dead instantly." <<std::endl;
        quick_exit(EXIT_SUCCESS);
    }
    else if (timeToFinish > 3){
        std::cout << "You typed it in " << timeToFinish << " seconds. Not fast enough. The projectile engulfs your body and you are dead instantly." << std::endl;
        quick_exit(EXIT_SUCCESS);
    }
}

void levelFivePartB(){
    std::string answer;
    int timeToFinish;
    std::cout << "The Necromancer seems injured but spawns a zombie with a dark spell." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(5));
    std::cout << "The zombie charges at you. Type 'DECAPITATE' to kill the zombie." << std::endl;
    std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();
    std::cin >> answer;
    std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();
    timeToFinish = std::chrono::duration_cast<std::chrono::seconds>(end - start).count();
    std::transform(answer.begin(), answer.end(), answer.begin(), ::tolower);
    if (answer == "decapitate" and timeToFinish <= 3){
        std::cout << "You typed it in " << timeToFinish << " seconds! That's fast. You swing your sword and the zombie's head comes clean off." << std::endl;
    }
    else if (answer != "decapitate"){
        std::cout << "You typed it incorrectly. The zombie bites you in the neck, and you finish yourself before you the zombification occurs." <<std::endl;
        quick_exit(EXIT_SUCCESS);
    }
    else if (timeToFinish > 3){
        std::cout << "You typed it in " << timeToFinish << " seconds. Not fast enough. The zombie bites you in the neck, and you finish yourself before you the zombification occurs." << std::endl;
        quick_exit(EXIT_SUCCESS);
    }
}


void levelFivePartC(){
    std::string answer;
    int timeToFinish;
    std::this_thread::sleep_for(std::chrono::seconds(3));
    std::cout << "The Necromancer seems surprised by your skill, he seems out of tricks.\nType 'FINISH_HIM_NOW' to end this" << std::endl;
    std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();
    std::cin >> answer;
    std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();
    timeToFinish = std::chrono::duration_cast<std::chrono::seconds>(end - start).count();
    std::transform(answer.begin(), answer.end(), answer.begin(), ::tolower);
    if (answer == "finish_him_now" and timeToFinish <= 3){
        std::cout << "Level 5 and the game completed. You typed it in " << timeToFinish << " seconds! That's fast. You destroy him with one fell swoop." << std::endl;
    }
    else if (answer != "finish_him_now"){
        std::cout << "You typed it incorrectly. You don't charge in time, and he knocks you out with his staff." <<std::endl;
        quick_exit(EXIT_SUCCESS);
    }
    else if (timeToFinish > 3){
        std::cout << "Level 5 failed. You typed it in " << timeToFinish << " seconds. Not fast enough. You don't charge in time, and he knocks you out with his staff." << std::endl;
        quick_exit(EXIT_SUCCESS);
    }
}

int main()
{
  std::string name;
  std::cout << "This is the typing dungeon. You must type to survive. \nWhat is your name adventurer? ";
  std::cin>>name;
  std::cout << "Hello, " << name << "!\nLets get started.\n";
  levelOne();
  levelTwo();
  levelThreePartA();
  levelThreePartB();
  levelFour();
  levelFivePartA();
  levelFivePartB();
  levelFivePartC();
  std::cout << "Well done, " << name << ". You collect the mighty treasure and celebrate with a mighty feast" << std::endl;
}
